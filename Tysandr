[{"name":"Utilities","type":"folder","desc":"Feel free to delete with impunity.","id":"QO-x2b69t","is_open":false,"children":[{"name":"http.link","type":"trigger","patterns":["^[\\S\\s]*([Hh]ttps?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)?)[\\S\\s]*$"],"output":" Triggers.ignore(true)\n var url = matches[1]\n sub({\n   method: 'inline-substitution',\n   target: url,\n   output: '<a href=\"' + url + '\" target=\"_blank\">' + url + '</a>'\n })","id":"QO-l1za3h"},{"name":"`js, Execute Javascript","type":"alias","patterns":["^`js[ ]+(.*)$"],"output":" var x = eval(matches[1])\n display(x)\n console.log(x)","id":"QO-twaae2"},{"name":"TIMEOUT","type":"trigger","patterns":["^You will TIMEOUT in 1 minute unless you do something\\.$"],"output":" Core.send(\"p nothing\")","id":"QO-ouj0sv"}]},{"name":"Samples","type":"folder","desc":"Feel free to also delete this with impunity.","id":"QO-m8lvcw","is_open":false,"output":"","children":[{"name":"shop.summative","type":"trigger","patterns":["^[ ]+?(.+?) (.+?)[ ]+?(\\d+)[ ]+?(\\d+)gp$"],"output":"\nvar comma  = Utilities.commaThis\nvar lpad   = Utilities.lpad\n\nvar count = matches[3]\nvar price = matches[4]\n\nappend('<span class=\"topaz\">' + lpad(comma(count * price), 11) + '</span> <span class=\"mute\">gold</span>')\n","id":"QO-m9kp5n"},{"name":"credit.reset","type":"trigger","patterns":["^Credits currently available for purchase:$"],"output":" credit.reset()","id":"QO-afrmtr"},{"name":"credit.summation","type":"trigger","patterns":["^([ ]+?)(\\d+ credit)s* at (\\d+ gold) per credit\\.$"],"output":" credit.summation(matches)","id":"QO-208yfb"},{"name":"credit","type":"script","output":"\ncredit = typeof credit != 'undefined' ? credit : {}\n\ncredit.reset = function() {\n  credit.collation = []\n  $('.credit-anchor')\n     .removeClass('credit-replaceable')\n     .removeAttr('onmouseover').removeAttr('onmouseout');\n}\ncredit.reset()\n\ncredit.summation = function(m) {\n  var comma  = Utilities.commaThis\n  var lpad   = Utilities.lpad\n  var rpad   = Utilities.rpad\n  \n  var number = parseInt(m[2].replace(/[^0-9]/g,''))\n  var cost   = parseInt(m[3].replace(/[^0-9]/g,''))\n\n  sub(m[3],'<span class=\"yellow\">' + lpad(comma(cost), 8) + '</span> gold')\n  /*\n  sub(m[1],'')\n  sub(m[2],'<span class=\"darkyellow\">' + lpad(comma(number), 9) + '</span> credit')\n  sub({\n    method: 'inline-substitution',\n    target: m[1],\n    output: '',\n  })\n  sub({\n    method: 'inline-substitution',\n    target: m[2],\n    output: '<span class=\"darkyellow\">' + lpad(comma(number), 9) + '</span> credit',\n  })\n  sub({\n    method: 'inline-substitution',\n    target: m[3],\n    output: '<span class=\"yellow\">' + lpad(comma(cost), 8) + '</span> gold',\n  })\n  */\n  \n  var cum = 0\n  var last = credit.collation[(credit.collation.length - 1)]\n  if (last) {\n    cum = number * cost + last.cum\n  } else { cum = number * cost }\n  credit.collation.push({number: number, cost: cost, sum: number * cost, cum: cum})\n  \n  var mode = 'hover'\n  var output  = '.'\n      output += '<span class=\"credit-anchor credit-replaceable\" '\n      if (mode == 'hover') {\n       output += 'onmouseover=\"credit.display(this, \\'' + (credit.collation.length - 1) + '\\')\" '\n       output += 'onmouseleave=\"credit.disguise()\">'\n      } else {\n       output += 'onmouseover=\"credit.show(this, \\'' + cum + '\\')\" '\n       output += 'onmouseleave=\"credit.hide()\">'\n      }\n      output += ' <span class=\"darkyellow\">'\n      output += lpad(comma(number * cost), 12)\n      output += '</span> gold</span>'\n  \n  /*\n  sub({\n    method: 'inline-substitution',\n    target: '.',\n    output: output,\n  })\n  */\n  sub('.', output)\n}\n\ncredit.display = function(e, index) {\n  var comma  = Utilities.commaThis\n  var lpad   = Utilities.lpad\n  var len    = $('.credit-replaceable').length\n  for (var k = 0; k < (len-1); k++) {\n    var v  = credit.collation[k].sum\n    var el = $('.credit-replaceable')[k]\n        el.children[0].classList.remove('topaz', 'credit-cumulative')\n        el.children[0].classList.add('darkyellow')\n        el.children[0].innerHTML = lpad(comma(v), 12)\n  }\n  \n  for (var k = 0; k < (parseInt(index) + 1); k++) {\n    var v  = credit.collation[k].cum\n    var el = $('.credit-replaceable')[k]\n        el.children[0].classList.remove('darkyellow')\n        el.children[0].classList.add('topaz', 'credit-cumulative')\n        el.children[0].innerHTML = lpad(comma(v), 12)\n  }\n}\n\ncredit.disguise = function() {\n  var comma  = Utilities.commaThis\n  var lpad   = Utilities.lpad\n  \n  $('.credit-replaceable').each(function(index, el){\n    var v = credit.collation[index].sum\n    el.children[0].classList.remove('topaz', 'credit-cumulative')\n    el.children[0].classList.add('darkyellow')\n    el.children[0].innerHTML = lpad(comma(v), 12)\n  })\n}\n\ncredit.show = function(e, v) {\n  var comma   = Utilities.commaThis\n  var r       = e.getBoundingClientRect()\n  var offsetX = r.right + 13\n  var offsetY = r.top\n\n  var d  = ''\n      d += '<div class=\"credit-display\" style=\"font-family:\\'Lekton\\'; font-size:9pt;'\n      d += ' position: absolute; z-index: 44; left: ' + offsetX + 'px; top: ' + offsetY + 'px;'\n      d += ' height: 16px; width: auto; padding-left: 2px; '\n      d += ' background-color: rgba( 1, 1, 1, 0.88 ); border-radius: 3px;\"'\n      d += '><span class=\"darkyellow\">' + comma(v) + '</span><span class=\"mute\"> cum.</span>'\n      d += '</div>'\n  $('#container').append(d)\n}\n\ncredit.hide = function() {\n  $('.credit-display').remove()\n}\n","id":"QO-ksg2yu"},{"name":"tutelage","type":"trigger","id":"QO-6t102n","patterns":["^(\\w+) has requested that you share"],"output":"var whitelist = ['Urzael']\n\nif (whitelist.indexOf(matches[1]) != 1) {\n  Core.send('ok')\n}"}]},{"name":"Combat","type":"folder","id":"QO-rqobz9","desc":"","is_open":true,"children":[{"name":"f, Follow","type":"alias","id":"QO-dsoifi","patterns":["^f[ ]+?(\\w+)$"],"output":"Core.send('follow ' + matches[1]) "},{"name":"ts, Touch shield","type":"alias","id":"QO-dvand7","patterns":["^ts$"],"output":"Core.send('touch shield')"},{"name":"Balance+","type":"trigger","id":"QO-0cm5qn","patterns":["^You have recovered (balance) on all limbs\\.$"],"output":"sub(matches[0], '<span class=\"orange\">' + matches[0] + '</span>')\nsub(matches[1], '<span class=\"hotred\">BALANCE</span>')"},{"name":"Equilibrium+","type":"trigger","id":"QO-lzslo1","patterns":["^You have recovered (equilibrium)\\.$"],"output":"sub(matches[0],'<span class=\"topaz\">' + matches[0] + '</span>')\nsub(matches[1],'<span class=\"darkyellow\">EQUILIBRIUM</span>')"},{"name":"Clot","type":"trigger","id":"QO-h62c55","patterns":["^You exert superior mental control and your wounds clot before your eyes\\.$"],"output":"sub(matches[0],'<span class=\"black\">Clot.</span>')"},{"name":"Paragon absorb","type":"trigger","id":"QO-am1rvo","patterns":["^Your paragon completely absorbs the damage\\.$"],"output":"sub(matches[0], '<span class=\"orange\">' + matches[0] + '</span>')"}]},{"name":"Bashing","type":"folder","id":"QO-48xl1h","desc":"","is_open":true,"children":[{"name":"bashing","type":"script","id":"QO-y7zsfx","output":"bash = typeof bash != 'undefined' ? bash : {}\n\nbash.print = Core.printdown\nbash.pre   = Client.prefix\nbash.state = bash.state || 0\nbash.prefix = '(<span class=\"turquoise\">bash</span>) '\n\nbash.report = function(msg) {\n  var str = '<span class=\"mute\">' + bash.prefix + msg + '</span>'\n  var pre = bash.pre()\n  bash.print(pre + str)\n}\n\nbash.rage = 0\nbash.skills = []\n\n// Shaman\nbash.skillset = {\n  Corruption: {\n    cost  : 14,\n    syntax: 'curse $target corruption',\n  },\n  Korkma: {\n    cost  : 29,\n    syntax: 'invoke korkma $target',\n  },\n  Vulnerability: {\n    cost  : 17,\n    syntax: 'curse $target vulnerability',\n  },\n  Haemorrhage: {\n    cost  : 36,\n    syntax: 'curse $target haemorrhage',\n  },\n  Vurus: {\n    cost  : 25,\n    syntax: 'invoke vurus $target',\n  },\n  Cesaret: {\n    cost  : 18,\n    syntax: 'invoke cesaret $target',\n  },\n}\nbash.skillPreference = [\"Haemorrhage\",\"Corruption\"]\n\nbash.crits = typeof bash.crits != 'undefined' ? bash.crits : {}\nbash.crits.strikes = bash.crits.strikes || 0"},{"name":"bash [on|off]","type":"alias","id":"QO-fx3j0n","patterns":["^bash([ ]+?(?:on|off))*$"],"output":"var setting = matches[1]\nif (setting) {\n  setting = setting.replace(' ','')\n  switch (setting) {\n    case 'on':\n      bash.state = 1\n      bash.report('Bashing <span class=\"green\">ON</span>.')\n      break;\n    case 'off':\n      bash.state = 0\n      bash.report('Bashing <span class=\"darkred\">OFF</span>.')\n      break;\n  }\n}"},{"name":"balance+","type":"trigger","id":"QO-dl3b2f","patterns":["^You have recovered (balance) on all limbs\\.$"],"output":""},{"name":"gold drop+","type":"trigger","id":"QO-ojuldj","patterns":["^A large pile of sovereigns spills from the corpse\\.$","^Numerous golden sovereigns spill from the corpse\\.$","^A small pile of sovereigns spills from the corpse\\.$"],"output":"bash.goldHere = true"},{"name":"gold drop-","type":"trigger","id":"QO-cdlq5a","patterns":["^I see no \\\"gold\\\" to take\\.$","^You pick up (\\d+) gold sovereigns\\.$"],"output":"bash.goldHere = false"},{"name":"slain+","type":"trigger","id":"QO-0bb2g7","patterns":["^You have slain (.+?), retrieving the corpse\\.$"],"output":"sub(matches[1], '<span class=\"darkred\">' + matches[1] + '</span>')"},{"name":"shield rebound","type":"trigger","id":"QO-gdhoev","patterns":["^A dizzying beam of energy strikes you as your attack rebounds off of (.+?)\\'s shield\\.$"],"output":""},{"name":"Rage","type":"folder","id":"QO-iyoe80","desc":"","is_open":false,"children":[{"name":"Rage-","type":"trigger","id":"QO-mczn5g","patterns":["^Your rage fades away\\.$"],"output":"bash.rage = 0"},{"name":"Rage Count","type":"trigger","id":"QO-v5a68b","patterns":["^\\[Rage\\]\\: \\+\\d+\\.\\d+\\. Total\\: (\\d+\\.\\d+)","^\\[Rage\\]\\: \\+\\d+\\.\\d+\\. Total\\: (\\d+\\.\\d+) Now Available\\: (.+?)$"],"output":"let A = matches[1]\nlet B = parseFloat(A)\n\nbash.rage = B\n\nlet C = matches[2]\nif (C) {\n  let D = C.split(',')\n  D.forEach(function(e,v) {\n    if (typeof bash.skillset[e] != 'undefined'\n        && bash.skills.indexOf(e) == -1) {\n      bash.skills.push(e)\n    }\n  })\n}"}]},{"name":"Criticals","type":"folder","id":"QO-rfg6wg","desc":"","is_open":false,"children":[{"name":"bash.critDisplay","type":"script","id":"QO-xc9mix","output":"bash.critDisplay = function() {\n  var rpad = Utilities.rpad\n  var lpad = Utilities.lpad\n  var round = Utilities.round2\n  \n  var currentTime = new Date()\n  var tstmp = ''\n  var mins  = currentTime.getMinutes()\n  var secs  = currentTime.getSeconds()\n  var mscs  = currentTime.getMilliseconds()\n      mins  = lpad(mins,2,'0')\n      secs  = lpad(secs,2,'0')\n      mscs  = lpad(mscs,3,'0')\n  tstmp = mins + ':' + secs + ':' + mscs + ' '\n  \n  var t = Utilities.clone(bash.crits)\n  var r = [\n      'CRITICAL',\n      'CRUSHING CRITICAL',\n      'OBLITERATING CRITICAL',\n      'ANNIHILATINGLY POWERFUL CRITICAL',\n      'WORLD-SHATTERING CRITICAL',\n      ]\n  var multipliers = [2,4,8,16,32]\n  var list = []\n      \n  var totalCrits = 0\n  var totalEffective = 0\n  for (var j = 0; j < r.length; j++) {\n    var n = t[r[j]]\n    totalCrits += n\n\n    var multi = multipliers[j]\n    totalEffective += multi * n\n    \n    list.push({tier: r[j], count: n, effective: multi * n})\n  }\n  \n  var p = '<span class=\"timestamp\">' + tstmp + '</span>' + '<span class=\"mutrigger\">&compfn;</span> '\n  var d = ''\n  \n  d += p + '<span class=\"mute\">' + rpad('', 62, ' ') + '</span>\\n'\n  d += p + '<span class=\"normal\">' + rpad('Total Strikes', 34, ' ') + ' : ' + lpad(bash.crits.strikes,6,' ') + '</span>\\n'\n  d += p + '<span class=\"normal\">' + rpad('Crit Rate', 34, ' ') + ' : ' + lpad(totalCrits,6,' ')\n  d += '   ' + (totalCrits / bash.crits.strikes * 100).toFixed(1) + '%</span>\\n'\n  d += p + '<span class=\"mute\">' + rpad('', 62, '=') + '</span>\\n'\n  \n  for (var k = list.length - 1; k > -1; k--) {\n    var tier = list[k].tier\n    var count = list[k].count\n    var effective = list[k].effective\n    \n    d += p + '<span class=\"normal\">  ' + rpad(tier, 32, ' ') + ' : ' + lpad(count,6,' ')\n    d += '   ' + lpad((count / bash.crits.strikes * 100).toFixed(1), 5, ' ') + '%'\n    d += '   ' + lpad((effective / totalEffective * 100).toFixed(1), 5, ' ') + '%'\n    d += '</span>\\n'\n  }\n  \n  d += p + '<span class=\"mute\">' + rpad('', 62, '=') + '</span>\\n'\n  d += p + '<span class=\"mute\">' + rpad('', 62, ' ') + '</span>\\n'\n  \n  Core.printdown(d)\n}"},{"name":"bash.crits","type":"alias","id":"QO-fkuiyw","patterns":["^crits$"],"output":"bash.critDisplay()"},{"name":"Criticals","type":"trigger","id":"QO-n53y5h","patterns":["^You have scored a (CRITICAL) hit!$","^You have scored a (CRUSHING CRITICAL) hit!$","^You have scored an (OBLITERATING CRITICAL) hit!$","^You have scored an (ANNIHILATINGLY POWERFUL CRITICAL) hit!$","^You have scored a (WORLD-SHATTERING CRITICAL) hit!!!$"],"output":"let tier = matches[1]\n\nsub(matches[0],'<span class=\"turquoise\">' + matches[0] + '</span>')\n\nbash.crits[tier]  = bash.crits[tier] || 0\nbash.crits[tier] += 1\n\n"},{"name":"strike+, Shaman","type":"trigger","id":"QO-8gjoq0","patterns":["^You point an imperious finger at (.+?) and blood begins to flow from (?:his|her) pores\\.$","^Blood continues to spurt out of (.+?)\\'s eyes, ears, nose, and mouth\\.$","^You point an imperious finger at (.+?)\\. (?:His|Her) flesh blackens and sloughs off\\.$"],"output":"bash.crits.strikes += 1"}]},{"name":"Shaman","type":"folder","id":"QO-14g3qn","desc":"","is_open":true,"children":[{"name":"bash.shaman","type":"script","id":"QO-sooq8m","output":"bash.shaman = {}\n\nbash.shaman.malign = false"},{"name":"malign+","type":"trigger","id":"QO-71swdg","patterns":["^Your malign power may be unleashed in the form of a jinx against your victim\\.$"],"output":"bash.shaman.malign = true"},{"name":"jinx+","type":"trigger","id":"QO-oy4oi1","patterns":["^Summoning your malign power, you direct a twin assault of the curses (.+?) and (.+?) at (.+?)\\.$","^You have not built up enough malign power to unleash a jinx\\.$","^Your malign power dissipates back to normal levels\\.$"],"output":"bash.shaman.malign = false"},{"name":"cb, Curse Bleed","type":"alias","id":"QO-lrwesw","patterns":["^cb[ ]+?(.+)$"],"output":"var sep    = '|'\nvar target = matches[1]\nvar cmd  = ''\n\nif (bash.goldHere) {\n  cmd += 'g gold' + sep\n}\n\nif (bash.shaman.malign) {\n  cmd += 'jinx bleed bleed ' + target + sep\n} else {\n  cmd += 'curse ' + target + ' bleed' + sep\n}\n\nif (typeof bash != 'undefined' && bash.rage > 0) {\n  var g;\n  for (var n = 0; n < bash.skillPreference.length; n++) {\n    var skill = bash.skillPreference[n]\n    if (bash.skills.indexOf(skill) != -1) {\n      bash.skills.splice(bash.skills.indexOf(skill), 1)\n      g = bash.skillset[skill]\n      cmd = g.syntax.replace('$target',target) + sep + cmd\n      break\n    }\n  }\n}\n\ncmd = 'queue addclear bal consider ' + target + sep + cmd\nCore.send(cmd)"}]}]},{"name":"Miscellaneous","type":"folder","id":"QO-dpp42p","desc":"","is_open":false,"children":[{"name":"ambient, rain","type":"trigger","id":"QO-htglgc","patterns":["^It is raining heavily, pregnant drops of water pouring down onto you\\.$","^Rain cascades down from the skies, drenching you and your environment\\.$","^Like a waterfall, rain pours down around you, soaking you thoroughly\\.$","^Occasional drops of rain fall to the ground from a sky grey with pregnant clouds\\.$","^Occasional raindrops fall on your head as the drizzle continues\\.$","^A light rain wets your surroundings, falling pleasantly around you\\.$","^A wall of sound, tangible in its fury, slams into you as lightning falls like rain on a distant location\\.$"],"output":"$('body').trigger('ambient','rain')"},{"name":"ambient, gold+","type":"trigger","id":"QO-g2gfu9","patterns":["^You pick up (\\d+) gold sovereigns\\.$"],"output":"sub(matches[1], '<span class=\"yellow\">' + matches[1] + '</span>')\n$('body').trigger('ambient','gold')"},{"name":"ambient, paragon+","type":"trigger","id":"QO-ovxko2","patterns":["^Your paragon completely absorbs the damage\\.$"],"output":"$('body').trigger('ambient','paragon')"},{"name":"Forays","type":"folder","id":"QO-ux8f1z","desc":"","is_open":true,"children":[{"name":"Forays","type":"script","id":"QO-160us0","output":"forays = typeof forays != 'undefined' ? forays : {}\n\nforays.triggered = forays.triggered || 0\nforays.available = forays.available || []\n\nforays.parse = function() {\n  console.log(forays.available)\n  \n  forays.available = []\n}"},{"name":"Forays triggered","type":"trigger","id":"QO-jyjebd","patterns":["^Running an eye over a foray board, you study the forays available\\:$"],"output":"forays.triggered = 1"},{"name":"Foray count+","type":"trigger","id":"QO-vibg4r","patterns":["^(\\d+)\\:\\s+?([a-z]+)$"],"output":"if (forays.triggered > 0) {\n  var c = matches[1]\n  var f = matches[2]\n  forays.available.push({key: c, foray: f})\n}"},{"name":"Forays border","type":"trigger","id":"QO-b3yx6l","patterns":["^--------------------------------------------------------------------------------$"],"output":"if (forays.triggered > 0) {\n  forays.triggered += 1\n  \n  if (forays.triggered > 2) {\n    forays.triggered = 0\n    forays.parse()\n  }\n}"}]}]}]