[{"name":"Utilities","type":"folder","desc":"Feel free to delete with impunity.","id":"QO-x2b69t","is_open":false,"children":[{"name":"http.link","type":"trigger","patterns":["^[\\S\\s]*([Hh]ttps?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)?)[\\S\\s]*$"],"output":" Triggers.ignore(true)\n var url = matches[1]\n sub({\n   method: 'inline-substitution',\n   target: url,\n   output: '<a href=\"' + url + '\" target=\"_blank\">' + url + '</a>'\n })","id":"QO-l1za3h"},{"name":"`js, Execute Javascript","type":"alias","patterns":["^`js[ ]+(.*)$"],"output":" var x = eval(matches[1])\n display(x)\n console.log(x)","id":"QO-twaae2"},{"name":"TIMEOUT","type":"trigger","patterns":["^You will TIMEOUT in 1 minute unless you do something\\.$"],"output":" Core.send(\"p nothing\")","id":"QO-ouj0sv"}]},{"name":"Samples","type":"folder","desc":"Feel free to also delete this with impunity.","id":"QO-m8lvcw","is_open":false,"output":"","children":[{"name":"shop.summative","type":"trigger","patterns":["^[ ]+?(.+?) (.+?)[ ]+?(\\d+)[ ]+?(\\d+)gp$"],"output":"\nvar comma  = Utilities.commaThis\nvar lpad   = Utilities.lpad\n\nvar count = matches[3]\nvar price = matches[4]\n\nappend('<span class=\"topaz\">' + lpad(comma(count * price), 11) + '</span> <span class=\"mute\">gold</span>')\n","id":"QO-m9kp5n"},{"name":"credit.reset","type":"trigger","patterns":["^Credits currently available for purchase:$"],"output":" credit.reset()","id":"QO-afrmtr"},{"name":"credit.summation","type":"trigger","patterns":["^([ ]+?)(\\d+ credit)s* at (\\d+ gold) per credit\\.$"],"output":" credit.summation(matches)","id":"QO-208yfb"},{"name":"credit","type":"script","output":"\ncredit = typeof credit != 'undefined' ? credit : {}\n\ncredit.reset = function() {\n  credit.collation = []\n  $('.credit-anchor')\n     .removeClass('credit-replaceable')\n     .removeAttr('onmouseover').removeAttr('onmouseout');\n}\ncredit.reset()\n\ncredit.summation = function(m) {\n  var comma  = Utilities.commaThis\n  var lpad   = Utilities.lpad\n  var rpad   = Utilities.rpad\n  \n  var number = parseInt(m[2].replace(/[^0-9]/g,''))\n  var cost   = parseInt(m[3].replace(/[^0-9]/g,''))\n\n  sub(m[3],'<span class=\"yellow\">' + lpad(comma(cost), 8) + '</span> gold')\n  /*\n  sub(m[1],'')\n  sub(m[2],'<span class=\"darkyellow\">' + lpad(comma(number), 9) + '</span> credit')\n  sub({\n    method: 'inline-substitution',\n    target: m[1],\n    output: '',\n  })\n  sub({\n    method: 'inline-substitution',\n    target: m[2],\n    output: '<span class=\"darkyellow\">' + lpad(comma(number), 9) + '</span> credit',\n  })\n  sub({\n    method: 'inline-substitution',\n    target: m[3],\n    output: '<span class=\"yellow\">' + lpad(comma(cost), 8) + '</span> gold',\n  })\n  */\n  \n  var cum = 0\n  var last = credit.collation[(credit.collation.length - 1)]\n  if (last) {\n    cum = number * cost + last.cum\n  } else { cum = number * cost }\n  credit.collation.push({number: number, cost: cost, sum: number * cost, cum: cum})\n  \n  var mode = 'hover'\n  var output  = '.'\n      output += '<span class=\"credit-anchor credit-replaceable\" '\n      if (mode == 'hover') {\n       output += 'onmouseover=\"credit.display(this, \\'' + (credit.collation.length - 1) + '\\')\" '\n       output += 'onmouseleave=\"credit.disguise()\">'\n      } else {\n       output += 'onmouseover=\"credit.show(this, \\'' + cum + '\\')\" '\n       output += 'onmouseleave=\"credit.hide()\">'\n      }\n      output += ' <span class=\"darkyellow\">'\n      output += lpad(comma(number * cost), 12)\n      output += '</span> gold</span>'\n  \n  /*\n  sub({\n    method: 'inline-substitution',\n    target: '.',\n    output: output,\n  })\n  */\n  sub('.', output)\n}\n\ncredit.display = function(e, index) {\n  var comma  = Utilities.commaThis\n  var lpad   = Utilities.lpad\n  var len    = $('.credit-replaceable').length\n  for (var k = 0; k < (len-1); k++) {\n    var v  = credit.collation[k].sum\n    var el = $('.credit-replaceable')[k]\n        el.children[0].classList.remove('topaz', 'credit-cumulative')\n        el.children[0].classList.add('darkyellow')\n        el.children[0].innerHTML = lpad(comma(v), 12)\n  }\n  \n  for (var k = 0; k < (parseInt(index) + 1); k++) {\n    var v  = credit.collation[k].cum\n    var el = $('.credit-replaceable')[k]\n        el.children[0].classList.remove('darkyellow')\n        el.children[0].classList.add('topaz', 'credit-cumulative')\n        el.children[0].innerHTML = lpad(comma(v), 12)\n  }\n}\n\ncredit.disguise = function() {\n  var comma  = Utilities.commaThis\n  var lpad   = Utilities.lpad\n  \n  $('.credit-replaceable').each(function(index, el){\n    var v = credit.collation[index].sum\n    el.children[0].classList.remove('topaz', 'credit-cumulative')\n    el.children[0].classList.add('darkyellow')\n    el.children[0].innerHTML = lpad(comma(v), 12)\n  })\n}\n\ncredit.show = function(e, v) {\n  var comma   = Utilities.commaThis\n  var r       = e.getBoundingClientRect()\n  var offsetX = r.right + 13\n  var offsetY = r.top\n\n  var d  = ''\n      d += '<div class=\"credit-display\" style=\"font-family:\\'Lekton\\'; font-size:9pt;'\n      d += ' position: absolute; z-index: 44; left: ' + offsetX + 'px; top: ' + offsetY + 'px;'\n      d += ' height: 16px; width: auto; padding-left: 2px; '\n      d += ' background-color: rgba( 1, 1, 1, 0.88 ); border-radius: 3px;\"'\n      d += '><span class=\"darkyellow\">' + comma(v) + '</span><span class=\"mute\"> cum.</span>'\n      d += '</div>'\n  $('#container').append(d)\n}\n\ncredit.hide = function() {\n  $('.credit-display').remove()\n}\n","id":"QO-ksg2yu"},{"name":"tutelage","type":"trigger","id":"QO-6t102n","patterns":["^(\\w+) has requested that you share"],"output":"var whitelist = ['Urzael']\n\nif (whitelist.indexOf(matches[1]) != 1) {\n  Core.send('ok')\n}"}]},{"name":"Combat","type":"folder","id":"QO-rqobz9","desc":"","is_open":false,"children":[{"name":"f, Follow","type":"alias","id":"QO-dsoifi","patterns":["^f[ ]+?(\\w+)$"],"output":"Core.send('follow ' + matches[1]) "},{"name":"ts, Touch shield","type":"alias","id":"QO-dvand7","patterns":["^ts$"],"output":"Core.send('touch shield')"},{"name":"Balance+","type":"trigger","id":"QO-0cm5qn","patterns":["^You have recovered (balance) on all limbs\\.$"],"output":"sub(matches[0], '<span class=\"orange\">' + matches[0] + '</span>')\nsub(matches[1], '<span class=\"hotred\">BALANCE</span>')"},{"name":"Equilibrium+","type":"trigger","id":"QO-lzslo1","patterns":["^You have recovered (equilibrium)\\.$"],"output":"sub(matches[0],'<span class=\"topaz\">' + matches[0] + '</span>')\nsub(matches[1],'<span class=\"darkyellow\">EQUILIBRIUM</span>')"},{"name":"Clot","type":"trigger","id":"QO-h62c55","patterns":["^You exert superior mental control and your wounds clot before your eyes\\.$"],"output":"sub(matches[0],'<span class=\"black\">Clot.</span>')"},{"name":"Paragon absorb","type":"trigger","id":"QO-am1rvo","patterns":["^Your paragon completely absorbs the damage\\.$"],"output":"sub(matches[0], '<span class=\"orange\">' + matches[0] + '</span>')"},{"name":"Transition","type":"folder","id":"QO-my05x2","desc":"","is_open":true,"children":[{"name":"df, dragonform","type":"alias","id":"QO-btcybr","patterns":["^df$"],"output":"Core.send('dragonform')"},{"name":"lf, lesserform","type":"alias","id":"QO-q48tje","patterns":["^lf$"],"output":"Core.send('lesserform')"},{"name":"da, dragonarmour","type":"alias","id":"QO-jkegyu","patterns":["^da$"],"output":"Core.send('dragonarmour on')"},{"name":"dragonform, start","type":"trigger","id":"QO-hdm2yi","patterns":["^Invoking the power that the line of Sycaerunax grants you, you will forth the Dragon within, and a (\\S+) light begins to emanate from your very soul\\.$","^As the (\\S+) light shining from you grows to an intensity that threatens to blind lesser beings, the mighty Dragon quickly subsumes your physical form, and raw power floods your mind\\.$"],"output":""},{"name":"dragonform, complete","type":"trigger","id":"QO-kho5fu","patterns":["^Reveling in your total mastery of the form, you beat your mighty wings, throw your massive head back, and roar your challenge to the world\\. You are Dragon\\!$"],"output":""},{"name":"dragonarmour+","type":"trigger","id":"QO-vqcx6x","patterns":["^With a low rumbling from deep within your belly, you beseech Ashaxei for protection\\. Your skin ripples as a web of crackling magical energy dances like fire across its surface, settling to solidify into a flexible, translucent shell\\.$"],"output":""}]}]},{"name":"Bashing","type":"folder","id":"QO-48xl1h","desc":"","is_open":true,"children":[{"name":"bashing","type":"script","id":"QO-y7zsfx","output":"bash = typeof bash != 'undefined' ? bash : {}\n\nbash.print = Core.printdown\nbash.pre   = Client.prefix\nbash.state = bash.state || 0\nbash.prefix = '(<span class=\"turquoise\">bash</span>) '\n\nbash.report = function(msg) {\n  var str = '<span class=\"mute\">' + bash.prefix + msg + '</span>'\n  var pre = bash.pre()\n  bash.print(pre + str)\n}\n\nbash.rage = 0\nbash.rageAvailable = []\n\nbash.shielded = false\n\nbash.crits = typeof bash.crits != 'undefined' ? bash.crits : {}\nbash.crits.strikes = bash.crits.strikes || 0\n\nbash.attack = function(tar) {\n  var target = tar || 'archer'\n  if (typeof gmcp != 'undefined' &&\n      typeof gmcp.Char != 'undefined' && \n      typeof gmcp.Char.Status != 'undefined' && \n      typeof gmcp.Char.Status.class != 'undefined') {\n          \n    bash.class = gmcp.Char.Status.class\n    switch(bash.class) {\n      case('Silver Dragon'):\n        bash.dragon.attack(target)\n        break;\n      case('Shaman'):\n        bash.shaman.attack(target)\n        break;\n      default:\n        break;\n        \n    }\n  } else {\n    bash.shaman.attack(target)\n  }\n}"},{"name":"bash [on|off]","type":"alias","id":"QO-fx3j0n","patterns":["^bash([ ]+?(?:on|off))*$"],"output":"var setting = matches[1]\nif (setting) {\n  setting = setting.replace(' ','')\n  switch (setting) {\n    case 'on':\n      bash.state = 1\n      bash.report('Bashing <span class=\"green\">ON</span>.')\n      break;\n    case 'off':\n      bash.state = 0\n      bash.report('Bashing <span class=\"darkred\">OFF</span>.')\n      break;\n  }\n} else {\n  if (bash.state === 1) {\n    bash.state = 0\n    bash.report('Bashing <span class=\"darkred\">OFF</span>.')\n  } else {\n    bash.state = 1\n    bash.report('Bashing <span class=\"green\">ON</span>.')\n  }\n}"},{"name":"balance+","type":"trigger","id":"QO-dl3b2f","patterns":["^You have recovered (balance) on all limbs\\.$"],"output":"if (bash.state === 1) {\n  bash.attack()\n}"},{"name":"stun-","type":"trigger","id":"QO-aw88f9","patterns":["^You are no longer stunned\\.$"],"output":"if (bash.state === 1) {\n  bash.attack()\n}"},{"name":"gold drop+","type":"trigger","id":"QO-ojuldj","patterns":["^A large pile of sovereigns spills from the corpse\\.$","^Numerous golden sovereigns spill from the corpse\\.$","^A small pile of sovereigns spills from the corpse\\.$"],"output":"bash.goldHere = true"},{"name":"gold drop-","type":"trigger","id":"QO-cdlq5a","patterns":["^I see no \\\"gold\\\" to take\\.$","^You pick up (\\d+) gold sovereigns\\.$","^You scoop up (\\d+) gold sovereigns\\.$"],"output":"bash.goldHere = false"},{"name":"slain+","type":"trigger","id":"QO-0bb2g7","patterns":["^You have slain (.+?), retrieving the corpse\\.$"],"output":"sub(matches[1], '<span class=\"darkred\">' + matches[1] + '</span>')"},{"name":"shield+","type":"trigger","id":"QO-iyt5qq","patterns":["^A nearly invisible magical shield forms around (.+?)\\.$"],"output":"bash.shielded = true"},{"name":"shield rebound","type":"trigger","id":"QO-gdhoev","patterns":["^A dizzying beam of energy strikes you as your attack rebounds off of (.+?)\\'s shield\\.$"],"output":"bash.shielded = true"},{"name":"shielded-","type":"trigger","id":"QO-df59l3","patterns":["^You prepare yourself to flick your tail at (.+?) before realising that doing so would not actually do anything\\.$","^You flick your tail at (.+?), dismissively brushing aside the paltry shield protecting (?:him|her)\\.$"],"output":"bash.shielded = false"},{"name":"Rage","type":"folder","id":"QO-iyoe80","desc":"","is_open":true,"children":[{"name":"Rage-","type":"trigger","id":"QO-mczn5g","patterns":["^Your rage fades away\\.$"],"output":"bash.rage = 0\nbash.rageAvailable = []"},{"name":"Rage Count","type":"trigger","id":"QO-v5a68b","patterns":["^\\[Rage\\]\\: \\+\\d+\\.\\d+\\. Total\\: (\\d+\\.\\d+)","^\\[Rage\\]\\: \\+\\d+\\.\\d+\\. Total\\: (\\d+\\.\\d+) Now Available\\: (.+?)$"],"output":"let A = matches[1]\nlet B = parseFloat(A)\n\nbash.rage = B\n\nlet C = matches[2]\nif (C) {\n  let D = C.split(',')\n  D.forEach(function(e,v) {\n    if (bash.rageAvailable.indexOf(e) == -1) {\n      bash.rageAvailable.push(e.trim())\n    }\n  })\n}"}]},{"name":"Criticals","type":"folder","id":"QO-rfg6wg","desc":"","is_open":true,"children":[{"name":"bash.critDisplay","type":"script","id":"QO-xc9mix","output":"bash.critDisplay = function() {\n  var rpad = Utilities.rpad\n  var lpad = Utilities.lpad\n  var round = Utilities.round2\n  \n  var currentTime = new Date()\n  var tstmp = ''\n  var mins  = currentTime.getMinutes()\n  var secs  = currentTime.getSeconds()\n  var mscs  = currentTime.getMilliseconds()\n      mins  = lpad(mins,2,'0')\n      secs  = lpad(secs,2,'0')\n      mscs  = lpad(mscs,3,'0')\n  tstmp = mins + ':' + secs + ':' + mscs + ' '\n  \n  var t = Utilities.clone(bash.crits)\n  var r = [\n      'CRITICAL',\n      'CRUSHING CRITICAL',\n      'OBLITERATING CRITICAL',\n      'ANNIHILATINGLY POWERFUL CRITICAL',\n      'WORLD-SHATTERING CRITICAL',\n      ]\n  var multipliers = [2,4,8,16,32]\n  var list = []\n      \n  var totalCrits = 0\n  var totalEffective = 0\n  for (var j = 0; j < r.length; j++) {\n    var n = t[r[j]]\n    totalCrits += n\n\n    var multi = multipliers[j]\n    totalEffective += multi * n\n    \n    list.push({tier: r[j], count: n, effective: multi * n})\n  }\n  \n  var p = '<span class=\"timestamp\">' + tstmp + '</span>' + '<span class=\"mutrigger\">&compfn;</span> '\n  var d = ''\n  \n  d += p + '<span class=\"mute\">' + rpad('', 62, ' ') + '</span>\\n'\n  d += p + '<span class=\"normal\">' + rpad('Total Strikes', 34, ' ') + ' : ' + lpad(bash.crits.strikes,6,' ') + '</span>\\n'\n  d += p + '<span class=\"normal\">' + rpad('Crit Rate', 34, ' ') + ' : ' + lpad(totalCrits,6,' ')\n  d += '   ' + (totalCrits / bash.crits.strikes * 100).toFixed(1) + '%</span>\\n'\n  d += p + '<span class=\"mute\">' + rpad('', 62, '=') + '</span>\\n'\n  \n  for (var k = list.length - 1; k > -1; k--) {\n    var tier = list[k].tier\n    var count = list[k].count\n    var effective = list[k].effective\n    \n    d += p + '<span class=\"normal\">  ' + rpad(tier, 32, ' ') + ' : ' + lpad(count,6,' ')\n    d += '   ' + lpad((count / bash.crits.strikes * 100).toFixed(1), 5, ' ') + '%'\n    d += '   ' + lpad((effective / totalEffective * 100).toFixed(1), 5, ' ') + '%'\n    d += '</span>\\n'\n  }\n  \n  d += p + '<span class=\"mute\">' + rpad('', 62, '=') + '</span>\\n'\n  d += p + '<span class=\"mute\">' + rpad('', 62, ' ') + '</span>\\n'\n  \n  Core.printdown(d)\n}"},{"name":"bash.crits","type":"alias","id":"QO-fkuiyw","patterns":["^crits$"],"output":"bash.critDisplay()"},{"name":"Criticals","type":"trigger","id":"QO-n53y5h","patterns":["^You have scored a (CRITICAL) hit!$","^You have scored a (CRUSHING CRITICAL) hit!$","^You have scored an (OBLITERATING CRITICAL) hit!$","^You have scored an (ANNIHILATINGLY POWERFUL CRITICAL) hit!$","^You have scored a (WORLD-SHATTERING CRITICAL) hit!!!$"],"output":"let tier = matches[1]\n\nsub(matches[0],'<span class=\"turquoise\">' + matches[0] + '</span>')\n\nbash.crits[tier]  = bash.crits[tier] || 0\nbash.crits[tier] += 1\n\n"},{"name":"strike+, Shaman","type":"trigger","id":"QO-8gjoq0","patterns":["^You point an imperious finger at (.+?) and blood begins to flow from (?:his|her) pores\\.$","^Blood continues to spurt out of (.+?)\\'s eyes, ears, nose, and mouth\\.$","^You point an imperious finger at (.+?)\\. (?:His|Her) flesh blackens and sloughs off\\.$"],"output":"bash.crits.strikes += 1"},{"name":"strike+, Dragon","type":"trigger","id":"QO-iy2o9s","patterns":["^You rip into (.+?) with your massive, deadly claws\\.$","^You charge quickly at (.+?), throwing your mighty form into (?:him|her) and sending (?:him|her) staggering back\\.$","^You puff small bolts of lightning at (.+?), enraging (?:him|her) and causing (?:him|her) to attack recklessly\\.$","^You breathe at (.+?), small bolts of lightning crackling around (?:him|her) and sensitizing (?:his|her) skin\\.$"],"output":"bash.crits.strikes += 1\n\n// STORMFLARE Missing\n// You breathe a series of lightning strikes in a lattice around a stout footsoldier, but he is able to quickly dart through the lattice and avoid the bulk of the lightning strikes."}]},{"name":"Shaman","type":"folder","id":"QO-14g3qn","desc":"","is_open":true,"children":[{"name":"bash.shaman","type":"script","id":"QO-sooq8m","output":"bash.shaman = {}\n\nbash.shaman.malign = false\n\nbash.shaman.ragePreference = [\"Haemorrhage\",\"Corruption\"]\n\nbash.shaman.rage = {\n  Corruption: {\n    cost  : 14,\n    syntax: 'curse $target corruption',\n  },\n  Korkma: {\n    cost  : 29,\n    syntax: 'invoke korkma $target',\n  },\n  Vulnerability: {\n    cost  : 17,\n    syntax: 'curse $target vulnerability',\n  },\n  Haemorrhage: {\n    cost  : 36,\n    syntax: 'curse $target haemorrhage',\n  },\n  Vurus: {\n    cost  : 25,\n    syntax: 'invoke vurus $target',\n  },\n  Cesaret: {\n    cost  : 18,\n    syntax: 'invoke cesaret $target',\n  },\n}\n\nbash.shaman.attack = function(t) {\n  var sep    = '|'\n  var target = t\n  var cmd  = ''\n\n  if (bash.goldHere) {\n    cmd += 'g gold' + sep\n  }\n\n  if (bash.shaman.malign) {\n    cmd += 'jinx bleed bleed ' + target + sep\n  } else {\n    cmd += 'curse ' + target + ' bleed' + sep\n  }\n\n  if (typeof bash != 'undefined' && bash.rage > 0) {\n    var g;\n    for (var n = 0; n < bash.shaman.ragePreference.length; n++) {\n      var skill = bash.shaman.ragePreference[n]\n      if (bash.rageAvailable.indexOf(skill) != -1) {\n        bash.rageAvailable.splice(bash.rageAvailable.indexOf(skill), 1)\n        g = bash.shaman.rage[skill]\n        cmd = g.syntax.replace('$target',target) + sep + cmd\n        break\n      }\n    }\n  }\n\n  cmd = 'queue addclear bal consider ' + target + sep + cmd\n  Core.send(cmd)\n}"},{"name":"malign+","type":"trigger","id":"QO-71swdg","patterns":["^Your malign power may be unleashed in the form of a jinx against your victim\\.$"],"output":"bash.shaman.malign = true"},{"name":"jinx+","type":"trigger","id":"QO-oy4oi1","patterns":["^Summoning your malign power, you direct a twin assault of the curses (.+?) and (.+?) at (.+?)\\.$","^You have not built up enough malign power to unleash a jinx\\.$","^Your malign power dissipates back to normal levels\\.$"],"output":"bash.shaman.malign = false"},{"name":"cb, Curse Bleed","type":"alias","id":"QO-lrwesw","patterns":["^cb[ ]+?(.+)$"],"output":"bash.shaman.attack(matches[1])"}]},{"name":"Dragon","type":"folder","id":"QO-6ool2m","desc":"","is_open":true,"children":[{"name":"bash.dragon","type":"script","id":"QO-yqmjet","output":"bash.dragon = {}\n\nbash.dragon.ragePreference = [\"Overwhelm\",\"Dragonspark\",\"Sizzle\"]\n// Stormflare miss rate is high\n\nbash.dragon.rage = {\n  Overwhelm: {\n    cost  : 14,\n    syntax: 'overwhelm $target',\n  },\n  Sizzle: {\n    cost  : 25,\n    syntax: 'sizzle $target',\n  },\n  Dragonspark: {\n    cost  : 36,\n    syntax: 'dragonspark $target',\n  },\n  Stormflare: {\n    cost  : 25,\n    syntax: 'stormflare $target',\n  },\n  Galvanize: {\n    cost  : 18,\n    syntax: 'galvanize $target',\n  },\n}\n\nbash.dragon.attack = function(t) {\n  var sep    = '|'\n  var target = t\n  var cmd  = ''\n\n  if (bash.goldHere) {\n    cmd += 'g gold' + sep\n  }\n  \n  if (bash.shielded) {\n    cmd += 'tailsmash ' + target + sep\n  } else {\n    cmd += 'gut ' + target + sep\n  }\n\n  if (typeof bash != 'undefined' && bash.rage > 0) {\n    var g;\n    for (var n = 0; n < bash.dragon.ragePreference.length; n++) {\n      var skill = bash.dragon.ragePreference[n]\n      if (bash.rageAvailable.indexOf(skill) != -1) {\n        bash.rageAvailable.splice(bash.rageAvailable.indexOf(skill), 1)\n        g = bash.dragon.rage[skill]\n        cmd = g.syntax.replace('$target',target) + sep + cmd\n        break\n      }\n    }\n  }\n\n  cmd = 'queue addclear bal consider ' + target + sep + cmd\n  Core.send(cmd)\n}"},{"name":"bb, bash.attack","type":"alias","id":"QO-2ioi1u","patterns":["^bb[ ]+?(.+)$"],"output":"bash.attack(matches[1])"}]}]},{"name":"Miscellaneous","type":"folder","id":"QO-dpp42p","desc":"","is_open":false,"children":[{"name":"Gags","type":"folder","id":"QO-0tygfd","desc":"","is_open":false,"children":[{"name":"System","type":"folder","id":"QO-ki8ksw","desc":"","is_open":true,"children":[{"name":"queue-","type":"trigger","id":"QO-g8t4mq","patterns":["^\\[System\\]\\: Queued balance commands cleared\\.$"],"output":"sub(matches[0],'')"}]}]},{"name":"Forays","type":"folder","id":"QO-ux8f1z","desc":"","is_open":false,"children":[{"name":"Forays","type":"script","id":"QO-160us0","output":"forays = typeof forays != 'undefined' ? forays : {}\n\nforays.triggered = forays.triggered || 0\nforays.available = forays.available || []\n\nforays.parse = function() {\n  console.log(forays.available)\n  \n  forays.available = []\n}"},{"name":"Forays triggered","type":"trigger","id":"QO-jyjebd","patterns":["^Running an eye over a foray board, you study the forays available\\:$"],"output":"forays.triggered = 1"},{"name":"Foray count+","type":"trigger","id":"QO-vibg4r","patterns":["^(\\d+)\\:\\s+?([a-z]+)$"],"output":"if (forays.triggered > 0) {\n  var c = matches[1]\n  var f = matches[2]\n  forays.available.push({key: c, foray: f})\n}"},{"name":"Forays border","type":"trigger","id":"QO-b3yx6l","patterns":["^--------------------------------------------------------------------------------$"],"output":"if (forays.triggered > 0) {\n  forays.triggered += 1\n  \n  if (forays.triggered > 2) {\n    forays.triggered = 0\n    forays.parse()\n  }\n}"}]},{"name":"Ambience","type":"folder","id":"QO-hgto0p","desc":"","is_open":false,"children":[{"name":"ambient, gold+","type":"trigger","id":"QO-g2gfu9","patterns":["^You pick up (\\d+) gold sovereigns\\.$","^You scoop up (\\d+) gold sovereigns\\.$"],"output":"sub(matches[1], '<span class=\"yellow\">' + matches[1] + '</span>')\n$('body').trigger('ambient','gold')"},{"name":"ambient, paragon+","type":"trigger","id":"QO-ovxko2","patterns":["^Your paragon completely absorbs the damage\\.$"],"output":"$('body').trigger('ambient','paragon')"},{"name":"ambient, rain","type":"trigger","id":"QO-htglgc","patterns":["^It is raining heavily, pregnant drops of water pouring down onto you\\.$","^Rain cascades down from the skies, drenching you and your environment\\.$","^Like a waterfall, rain pours down around you, soaking you thoroughly\\.$","^Occasional drops of rain fall to the ground from a sky grey with pregnant clouds\\.$","^Occasional raindrops fall on your head as the drizzle continues\\.$","^A light rain wets your surroundings, falling pleasantly around you\\.$","^A wall of sound, tangible in its fury, slams into you as lightning falls like rain on a distant location\\.$"],"output":"$('body').trigger('ambient','rain')"}]},{"name":"Talismans","type":"folder","id":"QO-ehr987","desc":"","is_open":false,"children":[{"name":"talismans","type":"script","id":"QO-tyhspf","output":"talismans = (function(){\n  // Replace these 4 functions with your own as they are not included.\n  var print     = Core.printdown\n  var send      = Core.send\n  var lpad      = Utilities.lpad\n  var rpad      = Utilities.rpad\n  \n  var active    = false\n  var cmd_list  = 'talisman pieces'\n\n  var dragons   = ['Black','Blue','Gold','Green','Red','Silver']\n  var pieces    = ['bone','claw','eye','heart','leather','tooth','scale','special']\n  var specials  = {Black: 'acid sac', Blue: 'lung', Gold: 'brain stem', Green: 'poison sac', Red: 'belly', Silver: 'larynx'}\n  var inventory = {}\n  \n  var setup = function() {\n    dataset()\n    active = false\n  \n    var inject = function(rule) { $('body').append('<div class=\"tls-rules\">&shy;<style>' + rule + '</style></div>') }\n    if ( $('.tls-rules').length ) { $('.tls-rules').remove() }\n    var rules = `\n    .BlackDragon   { color: rgba(165,175,185,1); }\n    .BlueDragon    { color: rgba(135,165,210,1); }\n    .GoldDragon    { color: rgba(180,165, 85,1); }\n    .GreenDragon   { color: rgba(155,185, 85,1); }\n    .RedDragon     { color: rgba(200, 25, 25,1); }\n    .SilverDragon  { color: rgba(140,140,140,1); }`\n    inject(rules)\n  }\n  \n  var dataset = function() {\n    for (var type in specials) {\n      inventory[type] = {}\n      for (var i = 0; i < pieces.length; i++) {\n        var piece = pieces[i]\n        var special = false\n        if (piece == 'special') { piece = specials[type]; special = true; }\n        inventory[type][piece] = {}\n        if (special) {\n          for (var j = 1; j < 4; j++) { inventory[type][piece]['L'+j] = 0 }\n        } else {\n          for (var j = 1; j < 8; j++) { inventory[type][piece]['L'+j] = 0 }\n        }\n      }\n    }\n  }\n  \n  var parse = function(m) {\n    var t = {}\n    t.count = m[1]\n    t.type  = m[2]\n    t.piece = m[3]\n    t.level = m[4]\n    inventory[t.type] = inventory[t.type] || {}\n    inventory[t.type][t.piece] = inventory[t.type][t.piece] || {}\n    inventory[t.type][t.piece]['L'+t.level] = parseInt(t.count)\n  }\n  \n  var write = function() {\n    var str = '<span class=\"QO-line mute\">'\n        str += rpad('', 30) + ' '\n        str += 'L1    '\n        str += 'L2    '\n        str += 'L3    '\n        str += 'L4    '\n        str += 'L5    '\n        str += 'L6    '\n        str += 'L7    '\n        str += '</span>\\n<span class=\"QO-line mute\">' + rpad('+',83,'-') + '+</span>'\n    for (var k in inventory) {\n      for (var n in inventory[k]) {\n        str += '\\n'\n        str += '<span class=\"QO-line mute\">|<span class=\"' + k + 'Dragon\"> ' + rpad(lpad(k, 7) + ' Dragon ' + n, 28) + '</span>'\n        var sum = 0\n        var special = false\n        for (var v in specials) { var e = specials[v]; if (e == n) { special = true } }\n        for (var o in inventory[k][n]) {\n          var count = inventory[k][n][o]\n          var rank  = parseInt(o.replace('L',''))\n          sum += count * Math.pow(2, rank - 1)\n          if (count !== 0) { str += '<span class=\"' + k + 'Dragon\">' }\n          str += rpad('  ' + count, 6)\n          if (count !== 0) { str += '</span>' }\n        }\n        if (special) {\n          str += rpad('', 25) + '  <span class=\"' + k + 'Dragon\">' + lpad(sum, 2, ' ') + '</span> / 4 '\n        } else {\n          str += '  <span class=\"' + k + 'Dragon\">' + lpad(sum, 3, ' ') + '</span> / 64'\n        }\n        str += ' |</span></span>'\n      }\n    }\n    str += '\\n<span class=\"QO-line mute\">' + rpad('+',83,'-') + '+</span>'\n    // console.log(str)\n    print(str)\n  }\n  \n  var activate = function(v) { if (typeof v == 'boolean') { active = v }; return active }\n\n  return {\n    active: activate,\n    parse : parse,\n    setup : setup,\n    write : write,\n    border: 0,\n    data  : function() { return inventory },\n    reset : function() { inventory = {}; dataset() },\n  }\n})()\n\ntalismans.setup()"},{"name":"talisman.pieces","type":"alias","id":"QO-tj9rfg","patterns":["^tp$"],"output":"talismans.active(true)\ntalismans.reset()\ntalismans.border = 0\nCore.send('talisman pieces')"},{"name":"talismans.more","type":"trigger","id":"QO-0vwcbu","patterns":["^\\[Type MORE if you wish to continue reading\\. \\(\\d+\\% shown\\)\\]$"],"output":"if (talismans.active()) {\n  Core.send(\"more\")\n}"},{"name":"talismans.line","type":"trigger","id":"QO-2ekr1q","patterns":["^(?:B|P)[ ]+(\\d+)[ ]+a (\\w+) Dragon's (\\w+)[ ]+(\\d+)[ ]+Dragon[ ]+(\\w+)$","^(?:B|P)[ ]+(\\d+)[ ]+a (\\w+) Dragon (\\w+)[ ]+(\\d+)[ ]+Dragon[ ]+(\\w+)$","^(?:B|P)[ ]+(\\d+)[ ]+(\\w+) Dragon (leather)[ ]+(\\d+)[ ]+Dragon[ ]+(\\w+)$","^(?:B|P)[ ]+(\\d+)[ ]+a (Black|Gold|Green) Dragon's (acid sac|brain stem|poison sac)[ ]+(\\d+)[ ]+Dragon[ ]+(\\w+)$"],"output":"talismans.parse(matches)"},{"name":"talismans.off","type":"trigger","id":"QO-zikjn1","patterns":["^----------------------------------------------------------------------------------$"],"output":"if (talismans.active()) {\n  if (talismans.border === 0) {\n    talismans.border = 1\n  } else  if (talismans.border >= 1) {\n    talismans.active(false)\n    setTimeout(function() { talismans.write() }, 600)\n  }\n}"},{"name":"talismans.header","type":"trigger","id":"QO-sk1vqd","patterns":["^[ ]+(\\\\w+)dragonpieces"],"output":""}]},{"name":"Prospecting","type":"folder","id":"QO-qwdjas","desc":"","is_open":true,"children":[{"name":"prospecting","type":"script","id":"QO-2xirvr","output":"prospecting = (function() {\n  var clone = Utilities.clone\n  var print = function(msg) {\n    var str = '<span class=\"topaz\">(<span class=\"yellow\">digger</span>)</span> '\n        str = Client.prefix() + '<span class=\"mute\">' + str + msg + '</span>'\n        // str = '<span class=\"QO-line\">' + str + '</span>'\n    Core.printdown(str)\n  }\n  var send  = Core.send\n  \n  var active = false\n  \n  var permitted = [\n   {use: true,  area:'Mhojave Desert'   },\n   {use: true,  area:'Dakhota Hills'    },\n   {use: true,  area:'Dun Valley'       },\n   {use: true,  area:'Vashnar Mountains'},\n   {use: true,  area:'Southern Vashnars'},\n   {use: true,  area:'Pash Valley'      },\n   {use: true,  area:'Siroccian Hills'  },\n   {use: true,  area:'Granite Hills 1'  },\n   {use: true,  area:'Granite Hills 2'  },\n   {use: false, area:'Tundra'           },\n   {use: false, area:'Fissure of Echoes'},\n  ]\n  \n  var terminus =  \"37631\"\n  var list = []\n  \n  var construct = function() {\n    for (var i = 0; i < permitted.length; i++) {\n      var item = permitted[i]\n      if (item.use && typeof prospecting.data[item.area] != 'undefined') {\n        list = list.concat(clone(prospecting.data[item.area]))\n      }\n    }\n    list.push(terminus)\n    print('Generated prospecting list of ' + list.length + ' rooms.')\n  }\n  \n  var goNext = function() {\n    if (!active) {\n      print('Prospecting not active.')\n    }\n    if (list.length === 0) {\n      print('No further prospecting rooms listed.')\n      active = false\n      return\n    }\n    var nextRoom = list.shift()\n    print('Path track to ' + nextRoom + '.')\n    send('path track ' + nextRoom)\n  }\n  \n  return {\n    generate   : construct,\n    permissions: permitted,\n    next       : goNext,\n    print      : print,\n    list       : function() { return list },\n    active     : function(v) { if (typeof v != 'undefined') { active = v } return active },\n  }\n})()"},{"name":"prospecting data","type":"script","id":"QO-edpnc4","output":"prospecting = typeof prospecting != 'undefined' ? prospecting : {}\n\nprospecting.data = {\n  ['Mhojave Desert']: [\n    \"330\", \"331\", \"335\", \"334\", \"333\", \"343\", \"347\", \n    \"348\", \"352\", \"6587\", \"6629\", \"348\", \"45863\", \"344\", \n    \"345\", \"346\", \"350\", \"354\", \"358\", \"357\", \"356\", \n    \"355\", \"1236\", \"1235\", \"1247\", \"1246\", \"1249\", \"1250\", \n    \"1244\", \"1243\", \"1251\", \"1245\", \"1237\", \"316\", \"318\", \n    \"312\", \"311\", \"317\", \"315\", \"310\", \"314\", \"308\", \n    \"307\", \"303\", \"301\", \"309\", \"302\", \"300\", \"304\", \n    \"14790\", \"6164\", \"13778\", \"306\", \"305\"\n  ],\n  ['Dakhota Hills']: [\n    \"1079\", \"1080\", \"1077\", \"1081\", \"1083\", \"1094\", \"1084\", \n    \"1089\", \"1088\", \"1090\", \"1091\", \"1093\", \"1092\", \"1095\", \n    \"1103\", \"1102\", \"1115\", \"1118\", \"1119\", \"1121\", \"1123\", \n    \"1112\", \"1113\", \"1114\", \"1111\", \"1104\", \"1105\", \"1106\", \n    \"1096\", \"1097\", \"1098\", \"1082\", \"1100\", \"1101\", \"1125\", \n    \"1127\", \"1126\", \"1133\", \"1136\", \"1137\", \"1138\", \"1139\", \n    \"1132\", \"1128\", \"1131\", \"1130\", \"1108\", \"1107\"\n  ],\n  ['Dun Valley']: [\n    \"3812\", \"3797\", \"3796\", \"3799\", \"3801\", \"3802\", \"3805\", \n    \"3804\", \"3800\", \"3821\", \"3798\", \"3795\", \"5036\", \"5035\", \n    \"5034\", \"5033\", \"5032\"\n  ],\n  ['Vashnar Mountains']: [\n    \"2019\", \"2018\", \"2017\", \"2010\", \"2011\", \"2012\", \"2013\", \n    \"2015\", \"2016\", \"2014\", \"2009\", \"2008\", \"2007\"\n  ],\n  ['Southern Vashnars']: [\n    \"10226\", \"10247\", \"10224\", \"10502\", \"10381\", \"10458\", \"10241\", \n    \"10295\", \"38162\", \"35601\", \"35193\", \"10280\", \"10311\", \"10235\", \n    \"13553\", \"10342\", \"10299\", \"10250\", \"10448\", \"10218\", \"10219\", \n    \"10429\", \"10412\", \"10567\", \"10203\", \"10202\", \"10195\", \"10712\", \n    \"10196\", \"10194\", \"10240\", \"10184\", \"10186\", \"10182\", \"10185\", \n    \"10189\", \"10193\", \"10187\", \"10192\", \"10190\", \"10409\", \"10181\", \n    \"10206\", \"10222\"\n  ],\n  ['Pash Valley']: [\n    \"1726\", \"1725\", \"1724\", \"1723\", \"1722\", \"1721\", \"1720\", \n    \"1717\", \"1716\", \"1714\", \"5585\", \"4315\", \"1715\", \"1713\", \n    \"1718\", \"1719\", \"1712\", \"1711\", \"1710\", \"1705\", \"1702\", \n    \"1706\", \"1709\", \"1708\", \"1707\", \"1697\", \"1619\", \"1728\", \n    \"1490\", \"1729\", \"1727\", \"1686\", \"1685\", \"1683\", \"1634\", \n    \"1633\", \"1635\", \"1632\", \"1630\", \"1629\", \"1631\", \"1628\", \n    \"1627\", \"1626\", \"1433\", \"1434\", \"1432\", \"1431\", \"1435\",\n    \"1428\", \"1430\", \"1427\", \"1423\", \"1425\", \"1424\", \"1426\", \n    \"1429\", \"3018\", \"3017\", \"3019\", \"3020\", \"3391\", \"3390\", \n    \"3389\", \"28632\", \"3016\", \"3015\", \"2997\", \"2991\", \"2990\", \n    \"2977\"\n  ],\n  ['Siroccian Hills']: [\n    \"2979\", \"2980\", \"2981\", \"3420\", \"3421\", \"3422\", \"3424\", \n    \"3423\", \"2982\", \"2983\", \"2984\", \"2985\", \"2986\", \"2987\", \n    \"2988\"\n  ],\n  ['Granite Hills 1']: [\n    \"9067\", \"9068\", \"9069\", \"9075\", \"9074\", \"9073\", \"9070\", \n    \"9071\", \"9072\", \"9146\", \"19004\", \"11693\", \"11657\", \"18634\",\n    \"7626\", \"7154\", \"7153\", \"7155\", \"7156\", \"7226\", \"7625\", \n    \"9139\", \"9140\", \"9141\", \"9142\", \"9143\", \"9144\", \"9145\"\n  ],\n  ['Granite Hills 2']: [\n    \"9086\", \"9088\", \"9089\", \"9090\", \"9091\", \"9092\", \"9093\", \n    \"9096\", \"9094\", \"9095\", \"9138\", \"9147\", \"9097\", \"9098\", \n    \"9099\", \"9100\", \"9101\", \"9102\", \"9103\", \"9131\", \"9130\", \n    \"9105\", \"9104\"\n  ],\n  ['Tundra']: [\n    \"10832\", \"10866\", \"10833\", \"10836\", \"10835\", \"10906\", \"10922\", \n    \"10923\", \"10924\", \"11049\", \"10891\", \"10892\", \"10894\", \"10896\", \n    \"10893\", \"10897\", \"10898\", \"10901\", \"10907\", \"13931\", \"10909\", \n    \"10911\", \"13934\" ,\"10912\", \"14104\", \"10914\", \"10915\"\n  ],\n  ['Fissure of Echoes']: [\n    \"27613\", \"25555\", \"25027\", \"23720\", \"23052\", \"21114\", \"20259\", \n    \"18933\", \"16024\", \"15775\", \"15756\",\n  ]\n}"},{"name":"+pg, prospect generate","type":"alias","id":"QO-q3kwtk","patterns":["^\\+pg$"],"output":"prospecting.generate()"},{"name":"+pn, prospect next","type":"alias","id":"QO-r7i4vy","patterns":["^\\+pn$"],"output":"prospecting.active(true)\nprospecting.next()"},{"name":"lode+","type":"trigger","id":"QO-aaes43","patterns":["^You determine that there is a (\\w+) lode of (.*) here."],"output":"console.log(matches)"},{"name":"mine+","type":"trigger","id":"QO-of9549","patterns":["^There is a (\\w+) (.*) mine here on a (\\w+) lode that you'd guess is approximately (\\w+)% mined out\\.$"],"output":"console.log(matches)"},{"name":"stronghold+","type":"trigger","id":"QO-w91lrb","patterns":["This stronghold is controlled by (\\w+)\\."],"output":"console.log(matches)"},{"name":"mine owner+","type":"trigger","id":"QO-bc7t0e","patterns":["This (.+?) mine is owned by (\\w+)\\."],"output":"console.log(matches)"},{"name":"partial+","type":"trigger","id":"QO-e5acto","patterns":["^You determine that there is a (\\w+) lode of (.*) here\\. Approximately (.*)% has been mined\\."],"output":"console.log(matches)"},{"name":"arrival+","type":"trigger","id":"QO-swvhem","patterns":["^You have arrived at your destination!$"],"output":"if (prospecting.active()) {\n  Core.send('prospect')\n  Core.send('read sign')\n}"},{"name":"no lode+","type":"trigger","id":"QO-kogibp","patterns":["^You are enough of a prospector to realise there is no lode here and no point looking for one\\.$","^There are no lodes to be found within the mining camp proper\\.$"],"output":"if (prospecting.active()) {\n  var list = prospecting.list()\n  \n  prospecting.print('<span class=\"darkred\">' + list.length + '</span> rooms left.')\n  \n  setTimeout(function() {\n    prospecting.next()\n  }, 1100)\n}"},{"name":"traversal, in progress","type":"trigger","id":"QO-v30bil","patterns":["^You are already traversing to a location. If you wish to cancel your movement, please CLICK HERE\\.$"],"output":""},{"name":"walking error+","type":"trigger","id":"QO-m9adw6","patterns":["^You are already there!$"],"output":"if (prospecting.active()) {\n  Core.send('prospect')\n  Core.send('read sign')\n}"}]},{"name":"arrived, shipwreck","type":"trigger","id":"QO-y2mdy5","patterns":["^You step into a small boat, which is lowered to the water and rowed to (Floating ship wreckage) by a pair of burly oarsmen\\. After you disembark, the rowboat returns to the windcutter, which sets sail in the direction from whence you came\\.$"],"output":""}]}]